
 creamos un contenedor y lomodificamos

docker run -d  -it --name ubuntu1 ubuntu bash

wget http://www.google.com

apt-get update
apt-get install iputils-ping

apt-get install wget

wget http://www.google.com

---

docker run -d  -it --name ubuntu2 ubuntu bash

wget http://www.google.com

--- comando para ver los cabios (A=adiccion, C=change, D=delete)--
docker diff ubuntu1

--- crear imagen manualmente---
docker commit ubuntu1 mi_ubuntu:v1


docker images

docker run -it mi_ubuntu bash


--- con docker file--- fichero de instrucciones para contruir una imagen

se puede ir versionando 

mkdir imagen_python
cd imagen_python
nano Dockerfile

FROM ubuntu
RUN apt-get update
RUN apt-get install -y python

(. contexto donde esta el directorio)
docker build -t imagen_python .

docker run -it imagen_python python

print('hola')
exit

-- docker image history imagen_python (cambios que ha pasado la imagen)

-- FROM---
-- CMD---

FROM ubuntu
RUN apt-get update
RUN apt-get install -y python
RUN echo 1.0 >> /etc/version && apt-get install -y git \
	&& apt-get install -y iputils-ping
CMD  echo "bienvenido a este contenedor" (ejecuta una chell)

CMD ["/bin/bash"] (ejecuta bash)


docker build -t image1:v1 .
docker run -it --rm image1:v1

docker run -it --rm image1:v1 df -h (modifico lo que esta en el cmd)

-- ENTREPOINT---

FROM ubuntu
RUN apt-get update
RUN apt-get install -y python
RUN echo 1.0 >> /etc/version && apt-get install -y git \
	&& apt-get install -y iputils-ping

ENTREPOINT ["/bin/bash"] (no se modifica)

docker build -t image1:v2 .


docker run -it --rm image1:v2 df -h (lo aÃ±ade al comando)


-- ENTREPOINT y CMD---

FROM ubuntu
RUN apt-get update
RUN apt-get install -y python
RUN echo 1.0 >> /etc/version && apt-get install -y git \
	&& apt-get install -y iputils-ping

ENTREPOINT ["ping","-c","3"] 
CMD ["localhost"]

docker build -t image1:v3 .

docker run -it --rm image1:v3

docker run -it --rm image1:v3 www.google.com

--mdoficar el entryponid
docker run -it --rm --entrypoint date image1:v3


-- WORDKDIR--- directorio de trabajo para las directivas


FROM ubuntu
RUN apt-get update
RUN apt-get install -y python
RUN echo 1.0 >> /etc/version && apt-get install -y git \
	&& apt-get install -y iputils-ping
RUN mkdir /datos

WORDKDIR /datos

RUN touch f1.txt

RUN mkdir /datos1
RUN touch f2.txt

ENTREPOINT ["/bin/bash"] 

docker build -t image1:v4 .

docker run -it --rm image1:v4 

-- COPPY-ADD---

touch index.html
touch app.log

FROM ubuntu
RUN apt-get update
RUN apt-get install -y python
RUN echo 1.0 >> /etc/version && apt-get install -y git \
	&& apt-get install -y iputils-ping
RUN mkdir /datos
WORDKDIR /datos
RUN touch f1.txt
RUN mkdir /datos1
RUN touch f2.txt

COPPY  index.html .
COPPY  app.log /datos.

ADD docs  docs
ADD f*  /datos/
ADD f.tar .


ENTREPOINT ["/bin/bash"] 

docker build -t image1:v5 .

docker run -it --rm image1:v5 

-- ENV---

FROM ubuntu
RUN apt-get update
RUN apt-get install -y python
RUN echo 1.0 >> /etc/version && apt-get install -y git \
	&& apt-get install -y iputils-ping
RUN mkdir /datos

WORDKDIR /datos

RUN touch f1.txt

ENV dir=/data dir1=/data1

RUN mkdir $dir &&  mkdir $dir1

ENTREPOINT ["/bin/bash"]

docker build -t image1:v6 .

docker run -it --rm image1:v6

-- EXPOSE--- exponer puertos

FROM ubuntu
RUN apt-get update
RUN apt-get install -y python
RUN echo 1.0 >> /etc/version && apt-get install -y git \
	&& apt-get install -y iputils-ping
RUN mkdir /datos

WORDKDIR /datos

RUN touch f1.txt

ENV dir=/data dir1=/data1

RUN mkdir $dir &&  mkdir $dir1

RUN apt-get install -y apache2

EXPOSE 80

ENTREPOINT ["/bin/bash"]

docker build -t image1:v7 .

docker run -it --rm image1:v7

-- VOOLUME---









